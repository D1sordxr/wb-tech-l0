services:
  postgres:
    image: postgres:15-alpine
    container_name: orders-postgres
    environment:
      POSTGRES_DB: orders-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d orders-db"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  kafka:
    container_name: orders-kafka
    image: bitnami/kafka:4.0.0
    restart: unless-stopped
    volumes:
      - kafka_data:/bitnami/kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9094
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9093,EXTERNAL://:9092,CONTROLLER://:9094
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9093,EXTERNAL://localhost:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_CFG_NUM_PARTITIONS=3
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9093", "--list" ]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: orders-api
    command: [ "/app/api" ]
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      CONFIG_PATH: /app/configs/api/prod.yaml
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      KAFKA_BROKERS: kafka:9093
    volumes:
      - ./configs:/app/configs:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  ui:
    build:
      context: .
      dockerfile: Dockerfile-ui
    container_name: orders-ui
    ports:
      - "80:80"
    depends_on:
      - api
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  pgdata:
    driver: local
  kafka_data:
    driver: local